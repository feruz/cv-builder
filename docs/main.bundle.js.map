{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.module.ts","./src/app/components/app.component.ts","./src/app/components/form.ts","./src/app/components/pdf.ts","./src/app/interfaces/company.ts","./src/app/interfaces/project.ts","./src/app/routes.ts","./src/app/templates/form.html","./src/app/templates/layout.html","./src/app/templates/pdf.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;ACVuD;AACE;AACC;AACqB;AACb;AAGZ;AAEiC;AAE7B;AAExB;AAElC,sBAAsB;AAC4B;AACF;AA2BhD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAzBrB,uEAAQ,CAAC;YACN,OAAO,EAAE;gBACL,gFAAa;gBACb,qGAAuB;gBACvB,mEAAW;gBACX,2EAAmB;gBACnB,8EAAgB;gBAChB,4EAAc;gBAEd,qEAAY;gBACZ,qGAAuB;gBACvB,uDAAM;aACT;YACD,YAAY,EAAE;gBACV,+EAAY;gBACZ,uEAAa;gBACb,sEAAY;aACf;YACD,SAAS,EAAE;gBACP,iEAAQ;aACX;YACD,SAAS,EAAE,CAAC,+EAAY,CAAC;SAC5B,CAAC;OAGW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;AC5C0C;AACR;AAQxD;IAGI,sBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAH7B,YAAY;QANxB,wEAAS,CAAC;YACP,QAAQ,EAAE,QAAS;YACnB,QAAQ,EAAE,eAAe;;SAE5B,CAAC;yCAK8B,+DAAM;OAHzB,YAAY,CAKxB;IAAD,mBAAC;CAAA;AALwB;;;;;;;;;;;;;;;;;;;;;;;ACTuC;AACR;AACR;AACA;AAUhD;IAUI,uBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QATlC,SAAI,GAAQ;YACR,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,MAAM,EAAE;gBACJ,IAAI,EAAE,CAAC,EAAC,KAAK,EAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;gBAC5B,KAAK,EAAE,CAAC,EAAC,KAAK,EAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;aAChC;SACJ,CAAC;IAEmC,CAAC;IAEtC,gCAAQ,GAAR;QACI,IAAI,OAAO,GAAG,IAAI,oEAAO,EAAE,CAAC;QAC5B,IAAI,OAAO,GAAG,IAAI,oEAAO,EAAE,CAAC;QAE5B,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,8BAAM,GAAN;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC;QAChE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QAEvD,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM;aAClB,aAAa,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7B,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IA/BQ,aAAa;QANzB,wEAAS,CAAC;YACP,QAAQ,EAAE,QAAS;YACnB,QAAQ,EAAE,WAAW;;SAExB,CAAC;yCAY8B,+DAAM;OAVzB,aAAa,CAgCzB;IAAD,oBAAC;CAAA;AAhCyB;;;;;;;;;;;;;;;;;;;;;ACbsC;AACQ;AAYxE;IAGI,sBAAoB,MAAc,EACd,cAA8B;QAD9B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAHlD,SAAI,GAAQ,EAAE,CAAC;IAGuC,CAAC;IAEvD,+BAAQ,GAAR;QAAA,iBAYC;QAXG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACvC,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC;YAEhE,EAAE,EAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+BAAQ,GAAR;QACI,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAClD,QAAQ,CAAC,OAAO,EAAE;YACd,MAAM,EAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YAC5B,QAAQ,EAAM,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM;YACrC,KAAK,EAAS,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE;YACzC,WAAW,EAAG,EAAE,GAAG,EAAE,GAAG,EAAE,eAAe,EAAE,IAAI,EAAE;SACpD,CAAC,CAAC;IACP,CAAC;IA5BQ,YAAY;QANxB,wEAAS,CAAC;YACP,QAAQ,EAAE,QAAS;YACnB,QAAQ,EAAE,cAAc;;SAE3B,CAAC;yCAK8B,+DAAM;YACE,uEAAc;OAJzC,YAAY,CA6BxB;IAAD,mBAAC;CAAA;AA7BwB;;;;;;;;;ACXzB;AAAA;IAMI;QAFA,aAAQ,GAAc,EAAE,CAAC;IAEV,CAAC;IACpB,cAAC;AAAD,CAAC;;;;;;;;;;ACTD;AAAA;IAOI;IAAe,CAAC;IACpB,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRyE;AAG1E,iBAAiB;AACiC;AACF;AAEhD,IAAM,OAAO,GAAW;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uEAAa,EAAE;IACtC,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,qEAAY,EAAE;IAE/C,iCAAiC;IACjC,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CACjC,CAAC;AAEK,IAAM,MAAM,GAAG,qEAAY,CAAC,OAAO,CAAC,OAAO,EAAE;IAChD,kBAAkB,EAAE,0EAAiB;CACxC,CAAC,CAAC;;;;;;;;ACjBH,04BAA04B,YAAY,EAAE,EAAE,uJAAuJ,6BAA6B,opBAAopB,EAAE,iLAAiL,6BAA6B,6pCAA6pC,oCAAoC,ySAAyS,mBAAmB,EAAE,ylBAAylB,qCAAqC,4SAA4S,mBAAmB,EAAE,+mBAA+mB,+B;;;;;;;ACA/9J,8L;;;;;;;ACAA,+LAA+L,WAAW,8CAA8C,eAAe,2FAA2F,kPAAkP,cAAc,4CAA4C,kBAAkB,+IAA+I,kBAAkB,wOAAwO,cAAc,aAAa,SAAS,uBAAuB,qHAAqH,kBAAkB,+CAA+C,kBAAkB,gFAAgF,mBAAmB,+QAA+Q,2BAA2B,sCAAsC,uBAAuB,sCAAsC,4BAA4B,6PAA6P,sBAAsB,oLAAoL,aAAa,kFAAkF,iBAAiB,0aAA0a,uBAAuB,qLAAqL,aAAa,kFAAkF,iBAAiB,qe;;;;;;;;ACArlG;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACvB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE,cAAc;CAC3B,CAAC;;;;;;;;;;;;;;ACR6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule, ErrorHandler } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { Router } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './components/app.component';\n\nimport { routes } from './routes';\n\n// --- Main components\nimport { FormComponent } from './components/form';\nimport { PdfComponent } from './components/pdf';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        NgSelectModule,\n\n        CommonModule,\n        BrowserAnimationsModule,\n        routes\n    ],\n    declarations: [\n        AppComponent,\n        FormComponent,\n        PdfComponent,\n    ],\n    providers: [\n        DatePipe,\n    ],\n    bootstrap: [AppComponent]\n})\n\n\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, HostListener, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n    moduleId: module.id,\n    selector: 'cvbuilder-app',\n    templateUrl: '../templates/layout.html'\n})\n\nexport class AppComponent  {\n\n\n    constructor(private router: Router) {}\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/app.component.ts","import { Component, HostListener, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Project } from '../interfaces/project';\nimport { Company } from '../interfaces/company';\n\ndeclare function html2pdf(elem: any): void;\n\n@Component({\n    moduleId: module.id,\n    selector: 'info-form',\n    templateUrl: '../templates/form.html'\n})\n\nexport class FormComponent implements OnInit {\n    data: any = {\n        education: {},\n        companies: [],\n        skills: {\n            left: [{title:'', level: 1}],\n            right: [{title:'', level: 1}]\n        }\n    };\n\n    constructor(private router: Router) {}\n\n    ngOnInit() {\n        let company = new Company();\n        let project = new Project();\n\n        company.projects.push(project);\n        this.data['companies'].push(company);\n    }\n\n    render() {\n        let people = JSON.parse(localStorage.getItem('people') || '[]');\n        people.push(this.data);\n        localStorage.setItem('people', JSON.stringify(people));\n\n        let index = people.length - 1;\n        const url = this.router\n            .createUrlTree(['pdf', index])\n            .toString();\n\n        this.router.navigateByUrl(url);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/form.ts","import { Component, HostListener, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { Project } from '../interfaces/project';\nimport { Company } from '../interfaces/company';\n\ndeclare function html2pdf(elem: any, conf: any): void;\n\n@Component({\n    moduleId: module.id,\n    selector: 'pdf-renderer',\n    templateUrl: '../templates/pdf.html'\n})\n\nexport class PdfComponent implements OnInit {\n    data: any = {};\n\n    constructor(private router: Router,\n                private activatedRoute: ActivatedRoute,) {}\n\n    ngOnInit() {\n        this.activatedRoute.params.subscribe(params => {\n            let index = params['index'];\n            let people = JSON.parse(localStorage.getItem('people') || '[]');\n\n            if(!people[index]) {\n                this.router.navigate(['/']);\n                return;\n            } else {\n                this.data = people[index];\n            }\n        });\n    }\n\n    generate() {\n        let element = document.getElementById('pdf-page');\n        html2pdf(element, {\n            margin:       [10, 0, 10, 0],\n            filename:     this.data.name + '.pdf',\n            image:        { type: 'png', quality: 1 },\n            html2canvas:  { dpi: 192, letterRendering: true }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/pdf.ts","import { Project } from './project';\n\nexport class Company {\n    name: string;\n    position: string;\n    workTime: string;\n    projects: Project[] = [];\n\n    constructor() {}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/interfaces/company.ts","export class Project {\n    name: string;\n    description: string;\n    duration: string;\n    teamSize: number;\n    techStack: string;\n\n    constructor() {}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/interfaces/project.ts","import { RouterModule, Routes, PreloadAllModules } from '@angular/router';\n\n\n// --- Main pages\nimport { FormComponent } from './components/form';\nimport { PdfComponent } from './components/pdf';\n\nconst routing: Routes = [\n    { path: '', component: FormComponent },\n    { path: 'pdf/:index', component: PdfComponent },\n\n    // --- otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\nexport const routes = RouterModule.forRoot(routing, {\n    preloadingStrategy: PreloadAllModules\n});\n\n\n// WEBPACK FOOTER //\n// ./src/app/routes.ts","module.exports = \"<div class=\\\"form-control section\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"data.name\\\">\\n</div>\\n<div class=\\\"form-control section\\\">\\n    <label>Position</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"data.position\\\">\\n</div>\\n<h1>Education</h1>\\n<div class=\\\"form-control section\\\">\\n    <label>University</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"data.education.university\\\">\\n</div>\\n<div class=\\\"form-control section\\\">\\n    <label>Branch</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"data.education.branch\\\">\\n</div>\\n<div class=\\\"form-control section\\\">\\n    <label>Description</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"data.education.description\\\">\\n</div>\\n<br>\\n\\n<h1>Work experience</h1>\\n<div class=\\\"companies-list section\\\">\\n    <div class=\\\"form-control\\\">\\n        <button class=\\\"add pull-right\\\" (click)=\\\"data.companies.push({projects:[{}]});\\\">Add company</button>\\n    </div>\\n    <div class=\\\"company section\\\" *ngFor=\\\"let company of data.companies\\\">\\n        <div class=\\\"delim-text\\\">{{ company.name || 'Company' }}</div>\\n        <div class=\\\"form-control\\\">\\n            <label>Company name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"company.name\\\">\\n        </div>\\n        <div class=\\\"form-control\\\">\\n            <label>Work period</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"company.workTime\\\">\\n        </div>\\n        <div class=\\\"form-control\\\">\\n            <label>Position</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"company.position\\\">\\n        </div>\\n        <div class=\\\"projects-list section\\\">\\n            <div class=\\\"form-control\\\">\\n                <button class=\\\"add pull-right\\\" (click)=\\\"company.projects.push({});\\\">Add project</button>\\n            </div>\\n            <div class=\\\"project section\\\" *ngFor=\\\"let project of company.projects\\\">\\n                <div class=\\\"delim-text\\\">{{ project.name || 'Project' }}</div>\\n                <div class=\\\"form-control\\\">\\n                    <label>Project Name</label>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"project.name\\\">\\n                </div>\\n                <div class=\\\"form-control\\\">\\n                    <label>Project description</label>\\n                    <textarea [(ngModel)]=\\\"project.description\\\"></textarea>\\n                </div>\\n                <div class=\\\"form-control\\\">\\n                    <label>Duration (years)</label>\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"project.duration\\\">\\n                </div>\\n                <div class=\\\"form-control\\\">\\n                    <label>Team size</label>\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"project.teamSize\\\">\\n                </div>\\n                <div class=\\\"form-control\\\">\\n                    <label>Technologies</label>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"project.techStack\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<h1>Skills</h1>\\n<div class=\\\"companies-list section\\\">\\n    <div class=\\\"company section\\\">\\n        <div class=\\\"delim-text\\\">{{ data.skills.leftName || 'Skills' }}</div>\\n        <div class=\\\"form-control\\\">\\n            <label>Left column name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"data.skills.leftName\\\">\\n        </div>\\n\\n        <div class=\\\"form-control\\\">\\n            <button class=\\\"add pull-right\\\" (click)=\\\"data.skills.left.push({title:'', level: 1});\\\">Add skill</button>\\n        </div>\\n        <div class=\\\"section skill\\\" *ngFor=\\\"let skill of data.skills.left\\\">\\n            <div class=\\\"form-control\\\">\\n                <label>Skill name</label>\\n                <input type=\\\"text\\\"  [(ngModel)]=\\\"skill.title\\\">\\n            </div>\\n            <div class=\\\"form-control level\\\">\\n                <label>Level</label>\\n                <input type=\\\"number\\\" max=\\\"5\\\" min=\\\"1\\\" step=\\\"0.5\\\" [(ngModel)]=\\\"skill.level\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"company section\\\">\\n        <div class=\\\"delim-text\\\">{{ data.skills.rightName || 'Skills' }}</div>\\n        <div class=\\\"form-control\\\">\\n            <label>Right column name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"data.skills.rightName\\\">\\n        </div>\\n\\n        <div class=\\\"form-control\\\">\\n            <button class=\\\"add pull-right\\\" (click)=\\\"data.skills.right.push({title:'', level: 1});\\\">Add skill</button>\\n        </div>\\n        <div class=\\\"section skill\\\" *ngFor=\\\"let skill of data.skills.right\\\">\\n            <div class=\\\"form-control\\\">\\n                <label>Skill name</label>\\n                <input type=\\\"text\\\"  [(ngModel)]=\\\"skill.title\\\">\\n            </div>\\n            <div class=\\\"form-control level\\\">\\n                <label>Level</label>\\n                <input type=\\\"number\\\" max=\\\"5\\\" min=\\\"1\\\" step=\\\"1\\\" [(ngModel)]=\\\"skill.level\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"form-control\\\">\\n    <button class=\\\"add pull-right\\\" (click)=\\\"render();\\\">Render</button>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/templates/form.html\n// module id = ./src/app/templates/form.html\n// module chunks = main","module.exports = \"<div class=\\\"page-global-container\\\" id=\\\"page-global-container\\\">\\n    <div class=\\\"content\\\" id=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/templates/layout.html\n// module id = ./src/app/templates/layout.html\n// module chunks = main","module.exports = \"<div class=\\\"pdf-page\\\" id=\\\"pdf-page\\\">\\n    <div class=\\\"head\\\">\\n        <div class=\\\"logo\\\"></div>\\n        <div class=\\\"logo-side\\\">\\n            <div class=\\\"name\\\">{{data.name}}</div>\\n            <div class=\\\"position\\\">{{data.position}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"section-name\\\" style=\\\"margin-top:0px;\\\">\\n        <img src=\\\"/assets/expirience-icon.svg\\\">\\n        <span>Experience</span>\\n    </div>\\n    <div class=\\\"work-item\\\" *ngFor=\\\"let company of data.companies\\\">\\n        <div class=\\\"left\\\">\\n            <div class=\\\"work-name\\\">{{company.name}}</div>\\n            <div class=\\\"period\\\">{{company.workTime}}</div>\\n        </div>\\n        <div class=\\\"right\\\">\\n            <div class=\\\"dot\\\"></div>\\n            <div class=\\\"position\\\">Position - {{company.position}}</div>\\n            <div class=\\\"prj\\\">Projects:</div>\\n            <ul class=\\\"projects\\\">\\n                <li *ngFor=\\\"let project of company.projects\\\">\\n                    <div class=\\\"desc\\\">\\n                        <span>{{project.name}}</span>&nbsp;-&nbsp;{{ project.description }}\\n                    </div>\\n                    <div class=\\\"details\\\">\\n                        <span>Duration: {{project.duration}}</span>\\n                        <span>Team: {{project.teamSize}}</span>\\n                    </div>\\n                    <div class=\\\"stack\\\">{{project.techStack}}</div>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"section-name\\\">\\n        <img src=\\\"/assets/education-icon.svg\\\">\\n        <span>Education</span>\\n    </div>\\n    <div class=\\\"education\\\">\\n        <div class=\\\"name\\\">{{data.education.university}}</div>\\n        <div class=\\\"prof\\\">{{data.education.branch}}</div>\\n        <div class=\\\"desc\\\">{{data.education.description}}</div>\\n    </div>\\n\\n\\n\\n    <div class=\\\"section-name\\\">\\n        <img src=\\\"/assets/skills-icon.svg\\\">\\n        <span>Professional skills</span>\\n    </div>\\n    <div class=\\\"skills\\\">\\n        <div class=\\\"left\\\">\\n            <div class=\\\"name\\\">{{data.skills.leftName}}</div>\\n            <ul class=\\\"skills-list\\\">\\n                <li *ngFor=\\\"let skill of data.skills.left\\\">\\n                    <div class=\\\"title\\\">\\n                        {{skill.title}}\\n                    </div>\\n                    <div class=\\\"level pull-right {{'c'+skill.level}}\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                        <div class=\\\"circle\\\"></div>\\n                        <div class=\\\"circle\\\"></div>\\n                        <div class=\\\"circle\\\"></div>\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"right\\\">\\n            <div class=\\\"name\\\">{{data.skills.rightName}}</div>\\n            <ul class=\\\"skills-list\\\">\\n                <li *ngFor=\\\"let skill of data.skills.right\\\">\\n                    <div class=\\\"title\\\">\\n                        {{skill.title}}\\n                    </div>\\n                    <div class=\\\"level pull-right {{'c'+skill.level}}\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                        <div class=\\\"circle\\\"></div>\\n                        <div class=\\\"circle\\\"></div>\\n                        <div class=\\\"circle\\\"></div>\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n\\n<button id=\\\"float-btn\\\" (click)=\\\"generate()\\\">Download</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/templates/pdf.html\n// module id = ./src/app/templates/pdf.html\n// module chunks = main","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n    production: false,\n    BRANDING: 'IncoAlliance',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}